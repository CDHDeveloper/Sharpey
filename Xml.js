// Generated by Sharpey 0.0.1
// Namespace UTIL
(function() {
	var System = require('System');
	var System.Collections.Generic = require('System.Collections.Generic');
	var System.Linq = require('System.Linq');
	var System.Text = require('System.Text');

	//public class Xml
	var Xml = exports.Xml = Xml = (function() {

		Xml.prototype.ReadDvdId = function(DvdIdFilePath) {
			var dvdId = "";
			var xmlDocument =  new System.Xml.XmlDocument();
			xmlDocument.Load(DvdIdFilePath);
			var xmlNode = xmlDocument.FirstChild;
			xmlNode = xmlNode.NextSibling;
			for (var childXmlNode in xmlNode.ChildNodes; ) {
				if (childXmlNode.Name == "ID") {
					dvdId = childXmlNode.InnerText;

				}
			}
			return dvdId;

		}

		Xml.prototype.WriteDVDIDXml = function(Title) {
			var success = false;
			var xmlDoc =  new System.Xml.XmlDocument();
			var xmlDeclaration = xmlDoc.CreateXmlDeclaration("1.0","","");
			xmlDoc.AppendChild(xmlDeclaration);
			var discNode = xmlDoc.CreateNode(System.Xml.XmlNodeType.Element,"Disc","");
			xmlDoc.AppendChild(discNode);
			var nameNode = xmlDoc.CreateNode(System.Xml.XmlNodeType.Element,"Name","");
			nameNode.InnerText = Title;
			discNode.AppendChild(nameNode);
			var idNode = xmlDoc.CreateNode(System.Xml.XmlNodeType.Element,"ID","");
			idNode.InnerText = DVDID;
			discNode.AppendChild(idNode);
			try {
				xmlDoc.Save(Location);
				success = true;
			}
			catch(ex) {			}
			return success;

		}

		Xml.prototype.ReadDvdInfoCacheXml = function(InfoCache) {
			if (InfoCache == null) {
				throw  new ApplicationException("InfoCache is Null",);

			}
			InfoCache.DvdInfoCacheXmlDocument =  new System.Xml.XmlDocument();
			InfoCache.DvdInfoCacheXmlDocument.Load(InfoCache.DvdInfoCacheFilePath);
			var xmlNode = InfoCache.DvdInfoCacheXmlDocument.FirstChild;
			xmlNode = xmlNode.NextSibling;
			xmlNode = xmlNode.FirstChild;
			for (var childXmlNode in xmlNode.ChildNodes; ) {
				switch (childXmlNode.Name)				
				{
					case "dvdTitle":
						InfoCache.Title = childXmlNode.InnerText;
						break;
					case "largeCoverParams":
						if (childXmlNode.InnerText.Length > 0) {
							InfoCache.IsLargeCoverParamsSet = true;

						}
						break;
					case "smallCoverParams":
						if (childXmlNode.InnerText.Length > 0) {
							InfoCache.IsSmallCoverParamsSet = true;

						}
						break;

				}
			}

		}

		Xml.prototype.EditDvdInfoCacheXml = function(InfoCache) {
			if (InfoCache == null) {
				throw  new ApplicationException("InfoCache is Null",);

			}
			InfoCache.DvdInfoCacheXmlDocument =  new System.Xml.XmlDocument();
			InfoCache.DvdInfoCacheXmlDocument.Load(InfoCache.DvdInfoCacheFilePath);
			var xmlNode = InfoCache.DvdInfoCacheXmlDocument.FirstChild;
			xmlNode = xmlNode.NextSibling;
			xmlNode = xmlNode.FirstChild;
			var largeCoverParamsNode = null;
			var smallCoverParamsNode = null;
			for (var childXmlNode in xmlNode.ChildNodes; ) {
				switch (childXmlNode.Name)				
				{
					case "dvdTitle":
						childXmlNode.InnerText = Title;
						break;
					case "largeCoverParams":
						if (RemoveLargeCoverParams) {
							largeCoverParamsNode = childXmlNode;

						}
						break;
					case "smallCoverParams":
						if (RemoveSmallCoverParams) {
							smallCoverParamsNode = childXmlNode;

						}
						break;

				}
			}
			if (largeCoverParamsNode != null) {
				xmlNode.RemoveChild(largeCoverParamsNode);

			}
			if (smallCoverParamsNode != null) {
				xmlNode.RemoveChild(smallCoverParamsNode);

			}
			InfoCache.DvdInfoCacheXmlDocument.Save(InfoCache.DvdInfoCacheFilePath);

		}
		
}

});